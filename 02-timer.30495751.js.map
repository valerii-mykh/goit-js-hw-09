{"mappings":"sEACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAUC,GAC/B,KAAMD,aAAoBC,GACtB,MAAM,IAAIC,UAAU,oC,WCG5B,SAASC,EAAkBC,EAAQC,GAC/B,IAAI,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CACjC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDhB,OAAOC,eAAeQ,EAAQI,EAAWI,IAAKJ,E,EAftDb,OAAOC,eAAeiB,EAAS,aAAc,CACzCf,OAAO,IAEXe,EAAQd,QACR,SAAsBE,EAAaa,EAAYC,GACvCD,GAAYX,EAAkBF,EAAYe,UAAWF,GACrDC,GAAaZ,EAAkBF,EAAac,GAChD,OAAOd,C,ECsCK,IAAf,W,sBA9CKgB,EACUC,G,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,W,aACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAElBC,KAAKC,KAAO,CACVC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,uBAC7BI,UAAWL,SAASC,cAAc,uB,iBAGtCb,IAAA,Y,MAAA,W,WACEkB,aAAY,WACV,IAGIC,EAHYC,EAAKZ,WAAWa,UAElBC,KAAKC,MAGnB,GAAIJ,EAAO,EAAG,CACZ,IAAMK,EAAMC,KAAKC,MAAMP,EAAQ,OACzBQ,EAAOF,KAAKC,MAChBP,EAAS,MAAyB,MAE9BS,EAAMH,KAAKC,MAAMP,EAAS,KAAoB,KAC9CU,EAAMJ,KAAKC,MAAMP,EAAS,IAAc,KAE9CC,EAAKU,YAAYV,EAAKV,KAAKM,KAAMa,GACjCT,EAAKU,YAAYV,EAAKV,KAAKK,KAAMa,GACjCR,EAAKU,YAAYV,EAAKV,KAAKI,MAAOa,GAClCP,EAAKU,YAAYV,EAAKV,KAAKC,KAAMa,E,MAEjCJ,EAAKV,KAAKO,UAAUc,YAAe,e,GAEpC,I,IAEL/B,IAAA,c,MAAA,SAAYgC,EAAMC,GAEdD,EAAKD,YADHE,GAAO,EACU,IAAMA,EAENA,C,OAK1B,GAAe,CAAmB,CAC/B1B,SAAU,WACVC,WAAY,IAAIc,KAAK,kBAGjBY,W","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/02-timer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","class CountdownTimer {\n    constructor({ selector, targetDate }) {\n      this.selector = selector;\n      this.targetDate = targetDate;\n  \n      this.refs = {\n        days: document.querySelector('[data-value=\"days\"]'),\n        hours: document.querySelector('[data-value=\"hours\"]'),\n        mins: document.querySelector('[data-value=\"mins\"]'),\n        secs: document.querySelector('[data-value=\"secs\"]'),\n        timerOver: document.querySelector('[data-value=\"over\"]'),\n      };\n    }\n    dateTimer() {\n      setInterval(() => {\n        const endDate = this.targetDate.getTime();\n  \n        let nowTime = Date.now();\n        let time = endDate - nowTime;\n  \n        if (time > 0) {\n          const day = Math.floor(time / (1000 * 60 * 60 * 24));\n          const hour = Math.floor(\n            (time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n          );\n          const min = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n          const sec = Math.floor((time % (1000 * 60)) / 1000);\n  \n          this.updateTimer(this.refs.secs, sec);\n          this.updateTimer(this.refs.mins, min);\n          this.updateTimer(this.refs.hours, hour);\n          this.updateTimer(this.refs.days, day);\n        } else {\n          this.refs.timerOver.textContent = `Timer is over`;\n        }\n      }, 1000);\n    }\n    updateTimer(nums, num) {\n      if (num <= 9) {\n        nums.textContent = '0' + num;\n      } else {\n        nums.textContent = num;\n      }\n    }\n  }\n  \n  const start = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2021'),\n  });\n  \n  start.dateTimer();"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","CountdownTimer","param","selector","targetDate","this","refs","days","document","querySelector","hours","mins","secs","timerOver","setInterval","time","_this","getTime","Date","now","day","Math","floor","hour","min","sec","updateTimer","textContent","nums","num","dateTimer"],"version":3,"file":"02-timer.30495751.js.map"}